package group

import (
	"fmt"
	"github.com/josuebrunel/sportdropin/pkg/collection"
	"github.com/josuebrunel/sportdropin/pkg/models"
	"github.com/josuebrunel/sportdropin/pkg/view"
	"github.com/josuebrunel/sportdropin/pkg/view/component"
	"github.com/josuebrunel/sportdropin/pkg/xsession"
	"strings"
)

func genFieldName(prefix, value string) string {
	return fmt.Sprintf("%s:%s", prefix, value)
}

templ GroupStatForm(group models.Group, schema SportStatSchema, members []map[string]string, attr templ.Attributes) {
	<h3>Stats</h3>
	<form { attr... }>
		@component.InputCSRF(view.Get[string](ctx, "csrf"))
		@component.SelectWithLabel("seasons", component.Select(
			templ.Attributes{"name": "season", "hx-target": "#content", "hx-get": view.Reverse(ctx, "stat.create", group.ID)},
			collection.ToMap(group.Expand.Seasons, func(r models.Season) (string, string) {
				return r.Name, r.ID
			}),
			group.ExtraGet("curseason"),
		))
		<table>
			<thead>
				<tr>
					<th>Nickname</th>
					for _, field := range schema {
						<th><abbr title={ field["name"] }>{ field["abbr"] }</abbr></th>
					}
				</tr>
			</thead>
			<tbody>
				for _, m := range members {
					<tr>
						<td>
							{ m["username"] }@component.InputHidden(genFieldName(m["id"], "member"), m["id"])
							@component.InputHidden(genFieldName(m["id"], "id"), m["stats_id"])
						</td>
						for _, f := range schema {
							<td>
								@component.Input(templ.Attributes{
									"name":  genFieldName(m["id"], f["abbr"]),
									"type":  f["type"],
									"value": m[f["abbr"]],
									"step":  1,
								})
							</td>
						}
					</tr>
				}
			</tbody>
		</table>
		@component.ButtonSubmit("Save", templ.Attributes{"value": "save", "class": "primary"})
	</form>
}

templ GroupStatList(group models.Group, stats []map[string]string, schema SportStatSchema) {
	<h3>
		Stats
		if strings.EqualFold(xsession.GetUser(ctx).ID, group.Expand.User.ID) {
			<i class="fa-regular fa-pen-to-square button" hx-get={ view.Reverse(ctx, "stat.create", group.ID) } hx-target="#content" role="button"></i>
		}
	</h3>
	@component.SelectWithLabel("seasons", component.Select(
		templ.Attributes{"name": "season", "hx-target": "#content", "hx-get": view.Reverse(ctx, "stat.list", group.ID)},
		collection.ToMap(group.Expand.Seasons, func(r models.Season) (string, string) {
			return r.Name, r.ID
		}),
		group.ExtraGet("curseason"),
	))
	<table>
		<thead>
			<tr>
				<th>Nickname</th>
				for _, field := range schema {
					<th><abbr title={ field["name"] }>{ field["abbr"] }</abbr></th>
				}
			</tr>
		</thead>
		<tbody>
			for _, m := range stats {
				<tr>
					<td><i class="fa-regular fa-user"></i> { m["username"] }</td>
					for _, f := range schema {
						<td>{ m[f["abbr"]] }</td>
					}
				</tr>
			}
		</tbody>
	</table>
}
